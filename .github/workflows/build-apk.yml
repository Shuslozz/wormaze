name: Build WORMAZE APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      APP_ID: com.wormaze.game
      APP_NAME: WORMAZE
      VERSION_NAME: 1.0
      VERSION_CODE: 1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        ndk-version: '25.1.8937393'
        cmake-version: '3.22.1'
        licenses: |
          android-sdk-license-ed0d0a5b
          android-sdk-license-33b6a2b5
          
    - name: Clone LÖVE Android template
      run: |
        git clone --depth 1 --branch main https://github.com/love2d/love-android.git love-template
        mkdir -p love-template/app/src/main/assets/game
        
    - name: Copy game files
      run: |
        cp main.lua love-template/app/src/main/assets/game/
        cp conf.lua love-template/app/src/main/assets/game/
        
    - name: Configure Android build
      run: |
        cd love-template
        
        # Basic configuration
        sed -i "s/org.love2d.android/$APP_ID/" app/src/main/AndroidManifest.xml
        sed -i "s/LÖVE/$APP_NAME/" app/src/main/AndroidManifest.xml
        sed -i "s/org.love2d.android/$APP_ID/" app/build.gradle
        sed -i "s/versionName \"11.4\"/versionName \"$VERSION_NAME\"/" app/build.gradle
        sed -i "s/versionCode 114/versionCode $VERSION_CODE/" app/build.gradle
        
        # Simplify build.gradle
        cat > app/build.gradle << 'EOL'
        plugins {
            id 'com.android.application'
        }

        android {
            namespace '$APP_ID'
            compileSdk 34
            
            defaultConfig {
                applicationId '$APP_ID'
                minSdk 16
                targetSdk 34
                versionCode $VERSION_CODE
                versionName '$VERSION_NAME'
            }
            
            buildTypes {
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
            }
            
            sourceSets {
                main {
                    assets.srcDirs = ['src/main/assets']
                }
            }
        }

        dependencies {
            implementation fileTree(dir: 'libs', include: ['*.jar'])
        }
        EOL
        
        # Initialize Gradle wrapper
        ./gradlew wrapper --gradle-version 8.9 --distribution-type all
        
    - name: Build Debug APK
      env:
        GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m"
      run: |
        cd love-template
        chmod +x gradlew
        ./gradlew assembleDebug --stacktrace || {
            echo "Build failed, showing task list:"
            ./gradlew tasks
            echo "Build directory contents:"
            find . -type d | grep -v "build" || true
            exit 1
        }
        
    - name: Verify and package APKs
      run: |
        mkdir -p build-output
        if [ -f "love-template/app/build/outputs/apk/debug/app-debug.apk" ]; then
          mv love-template/app/build/outputs/apk/debug/app-debug.apk build-output/wormaze-debug.apk
          echo "✅ Debug APK found"
          ls -lh build-output/
        else
          echo "❌ Debug APK not found! Full build directory:"
          find love-template/app/build -type d || true
          exit 1
        fi
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: wormaze-apk
        path: build-output/wormaze-debug.apk
        retention-days: 30
