name: Build WORMAZE APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      APP_ID: com.wormaze.game
      APP_NAME: WORMAZE
      VERSION_NAME: 1.0
      VERSION_CODE: 1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        sdk-version: 'commandlinetools-latest'
        ndk-version: '25.1.8937393'
        cmake-version: '3.22.1'
        licenses: |
          android-sdk-license-ed0d0a5b
          android-sdk-license-33b6a2b5
          
    - name: Clone and prepare LÖVE Android
      run: |
        # Clone with retry mechanism
        for i in {1..3}; do
          git clone --depth 1 --branch main https://github.com/love2d/love-android.git love-template && break || sleep 10
        done
        
        # Create game directory
        mkdir -p love-template/app/src/main/assets/game
        
        # Copy essential game files
        cp -v main.lua love-template/app/src/main/assets/game/
        cp -v conf.lua love-template/app/src/main/assets/game/
        
    - name: Configure Android project
      run: |
        cd love-template
        
        # Update AndroidManifest.xml
        sed -i "s/org.love2d.android/$APP_ID/" app/src/main/AndroidManifest.xml
        sed -i "s/LÖVE/$APP_NAME/" app/src/main/AndroidManifest.xml
        
        # Simplify build.gradle
        cat > app/build.gradle << 'EOL'
        plugins {
            id 'com.android.application'
        }

        android {
            compileSdk 34
            namespace '$APP_ID'
            
            defaultConfig {
                applicationId '$APP_ID'
                minSdk 21
                targetSdk 34
                versionCode $VERSION_CODE
                versionName '$VERSION_NAME'
                ndk {
                    abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                }
            }
            
            buildTypes {
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
            }
            
            lintOptions {
                abortOnError false
            }
        }

        dependencies {
            implementation fileTree(dir: 'libs', include: ['*.jar'])
        }
        EOL
        
        # Update Gradle properties
        echo "org.gradle.jvmargs=-Xmx4096m" >> gradle.properties
        echo "android.useAndroidX=true" >> gradle.properties
        echo "android.enableJetifier=true" >> gradle.properties
        
        # Update Gradle wrapper
        ./gradlew wrapper --gradle-version 8.9 --distribution-type all
        
    - name: Build with Gradle
      env:
        GRADLE_OPTS: "-Dorg.gradle.daemon=false"
      run: |
        cd love-template
        
        # First try normal build
        if ./gradlew clean assembleDebug --stacktrace --warning-mode none; then
          echo "✅ Build succeeded"
        else
          echo "❌ Build failed, retrying with more memory..."
          # Second try with more memory and info logging
          ./gradlew clean assembleDebug --stacktrace --info -Dorg.gradle.jvmargs=-Xmx4096m || {
            echo "❌ Build failed after retry"
            echo "Build directory contents:"
            find app/build -type d || true
            exit 1
          }
        fi
        
    - name: Verify and package APK
      run: |
        mkdir -p build-output
        
        if [ -f "love-template/app/build/outputs/apk/debug/app-debug.apk" ]; then
          mv love-template/app/build/outputs/apk/debug/app-debug.apk build-output/wormaze-debug.apk
          echo "✅ APK generated successfully"
          ls -lh build-output/
        else
          echo "❌ APK not found! Build outputs:"
          find love-template/app/build/outputs -type f || true
          exit 1
        fi
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: wormaze-apk
        path: build-output/wormaze-debug.apk
        retention-days: 30
