name: Build WORMAZE APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      APP_ID: com.wormaze.game
      APP_NAME: WORMAZE
      VERSION_NAME: 1.0
      VERSION_CODE: 1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        ndk-version: '25.1.8937393'
        cmake-version: '3.22.1'
        licenses: |
          android-sdk-license-ed0d0a5b
          android-sdk-license-33b6a2b5
          
    - name: Clone and prepare LÖVE Android
      run: |
        # Clone with retries
        for i in {1..3}; do
          git clone --depth 1 https://github.com/love2d/love-android.git love-template && break || sleep 5
        done
        
        # Create game directory structure
        mkdir -p love-template/app/src/main/assets/game
        
        # Copy game files
        cp main.lua love-template/app/src/main/assets/game/
        cp conf.lua love-template/app/src/main/assets/game/
        
        # Configure Android build
        cd love-template
        sed -i "s/org.love2d.android/$APP_ID/" app/src/main/AndroidManifest.xml
        sed -i "s/LÖVE/$APP_NAME/" app/src/main/AndroidManifest.xml
        sed -i "s/org.love2d.android/$APP_ID/" app/build.gradle
        sed -i "s/versionName \"11.4\"/versionName \"$VERSION_NAME\"/" app/build.gradle
        sed -i "s/versionCode 114/versionCode $VERSION_CODE/" app/build.gradle
        
        # Configure signing
        cat >> app/build.gradle << 'EOF'
        android {
            signingConfigs {
                debug {
                    storeFile file('debug.keystore')
                    keyAlias 'androiddebugkey'
                    keyPassword 'android'
                    storePassword 'android'
                }
            }
            buildTypes {
                release {
                    signingConfig signingConfigs.debug
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
            }
        }
        EOF
        
    - name: Build APKs
      env:
        GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m -Dorg.gradle.daemon=false"
      run: |
        cd love-template
        chmod +x gradlew
        
        # Clean and build with increased memory
        ./gradlew clean assembleDebug assembleRelease --stacktrace --info || {
          echo "❌ Build failed, retrying with more verbose output..."
          ./gradlew clean assembleDebug assembleRelease --stacktrace --debug --no-daemon
          exit 1
        }
        
    - name: Package APKs
      run: |
        mkdir -p build-output
        mv love-template/app/build/outputs/apk/debug/app-debug.apk build-output/wormaze-debug.apk
        mv love-template/app/build/outputs/apk/release/app-release.apk build-output/wormaze-release.apk
        echo "✅ Build artifacts:"
        ls -lh build-output/
        
    - name: Upload APKs
      uses: actions/upload-artifact@v4
      with:
        name: wormaze-apks
        path: build-output/*
        retention-days: 30
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: build-output/*
        name: ${{ env.APP_NAME }} ${{ github.ref_name }}
        body: |
          WORMAZE Version ${{ github.ref_name }}
          - Debug APK: wormaze-debug.apk
          - Release APK: wormaze-release.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
