name: Build WORMAZE APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      APP_ID: com.wormaze.game
      APP_NAME: WORMAZE
      VERSION_NAME: 1.0
      VERSION_CODE: 1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        ndk-version: '25.1.8937393'
        cmake-version: '3.22.1'
        licenses: |
          android-sdk-license-ed0d0a5b
          android-sdk-license-33b6a2b5
          
    - name: Clone LÖVE Android template
      run: |
        git clone --depth 1 --branch main https://github.com/love2d/love-android.git love-template
        mkdir -p love-template/app/src/main/assets/game
        
    - name: Copy game files
      run: |
        cp main.lua love-template/app/src/main/assets/game/
        cp conf.lua love-template/app/src/main/assets/game/
        
    - name: Configure Android build
      run: |
        cd love-template
        
        # Update configuration files
        sed -i "s/org.love2d.android/$APP_ID/" app/src/main/AndroidManifest.xml
        sed -i "s/LÖVE/$APP_NAME/" app/src/main/AndroidManifest.xml
        sed -i "s/org.love2d.android/$APP_ID/" app/build.gradle
        sed -i "s/versionName \"11.4\"/versionName \"$VERSION_NAME\"/" app/build.gradle
        sed -i "s/versionCode 114/versionCode $VERSION_CODE/" app/build.gradle
        
        # Disable prefab and NDK if not needed
        if [ -f "app/build.gradle" ]; then
          sed -i '/android {/a\
          buildFeatures {\
              prefab false\
          }\
          ndkVersion "25.1.8937393"\
          externalNativeBuild {\
              cmake {\
                  version "3.22.1"\
              }\
          }' app/build.gradle
        fi
        
        # Update Gradle wrapper
        ./gradlew wrapper --gradle-version 8.9 --distribution-type all
        
    - name: Build APKs
      env:
        GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4096m -Dorg.gradle.daemon=false"
      run: |
        cd love-template
        chmod +x gradlew
        
        # Clean build environment first
        ./gradlew clean
        
        # Build with limited logging
        if ./gradlew assembleDebug assembleRelease --stacktrace --warning-mode none; then
          echo "✅ Build succeeded"
        else
          echo "❌ Build failed, checking outputs..."
          ls -la app/build/outputs/apk/
          exit 1
        fi
        
    - name: Verify and package APKs
      run: |
        mkdir -p build-output
        
        # Debug APK
        if [ -f "love-template/app/build/outputs/apk/debug/app-debug.apk" ]; then
          mv love-template/app/build/outputs/apk/debug/app-debug.apk build-output/wormaze-debug.apk
          echo "✅ Debug APK found"
        else
          echo "❌ Debug APK not found!"
          find love-template/app/build -name "*.apk" || true
          exit 1
        fi
        
        # Release APK
        if [ -f "love-template/app/build/outputs/apk/release/app-release.apk" ]; then
          mv love-template/app/build/outputs/apk/release/app-release.apk build-output/wormaze-release.apk
          echo "✅ Release APK found"
        else
          echo "❌ Release APK not found!"
          find love-template/app/build -name "*.apk" || true
          exit 1
        fi
        
    - name: Upload APKs
      uses: actions/upload-artifact@v4
      with:
        name: wormaze-apks
        path: build-output/*
        retention-days: 30
